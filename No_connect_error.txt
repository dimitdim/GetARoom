In [44]: URLError: <urlopen error [Errno 10060] A connection attempt failed beca
use the c
  File "<ipython-input-44-e75e4bf354d2>", line 1
    URLError: <urlopen error [Errno 10060] A connection attempt failed because t
he c
            ^
SyntaxError: invalid syntax


In [45]: onnected party did not properly respond after a period of time, or esta
blished c
  File "<ipython-input-45-c2d94e4191aa>", line 1
    onnected party did not properly respond after a period of time, or establish
ed c
                 ^
SyntaxError: invalid syntax


In [46]: exit

C:\Users\kflores\Documents\GitHub\GetARoom>ipython
Python 2.7.6 |Anaconda 1.9.1 (64-bit)| (default, Nov 11 2013, 10:49:15) [MSC v.1
500 64 bit (AMD64)]
Type "copyright", "credits" or "license" for more information.

IPython 1.1.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: dir
Out[1]: <function dir>

In [2]: run get_data.py
---------------------------------------------------------------------------
KeyboardInterrupt                         Traceback (most recent call last)
C:\Program Filesl\Continuum\Anaconda\lib\site-packages\IPython\utils\py3compat.p
yc in execfile(fname, glob, loc)
    195             else:
    196                 filename = fname
--> 197             exec compile(scripttext, filename, 'exec') in glob, loc
    198     else:
    199         def execfile(fname, *where):

C:\Users\kflores\Documents\GitHub\GetARoom\get_data.py in <module>()
     13     elapsed=0
     14     while True:
---> 15         print(update())
     16         time.sleep(1)
     17         elapsed+=1

C:\Users\kflores\Documents\GitHub\GetARoom\get_data.py in update()
      4
      5 def update():
----> 6     f=urllib2.urlopen("http://10.26.66.19")
      7     soup=BeautifulSoup(f)
      8     title=soup.title.string

C:\Program Filesl\Continuum\Anaconda\lib\urllib2.pyc in urlopen(url, data, timeo
ut)
    125     if _opener is None:
    126         _opener = build_opener()
--> 127     return _opener.open(url, data, timeout)
    128
    129 def install_opener(opener):

C:\Program Filesl\Continuum\Anaconda\lib\urllib2.pyc in open(self, fullurl, data
, timeout)
    402             req = meth(req)
    403
--> 404         response = self._open(req, data)
    405
    406         # post-process response

C:\Program Filesl\Continuum\Anaconda\lib\urllib2.pyc in _open(self, req, data)
    420         protocol = req.get_type()
    421         result = self._call_chain(self.handle_open, protocol, protocol +

--> 422                                   '_open', req)
    423         if result:
    424             return result

C:\Program Filesl\Continuum\Anaconda\lib\urllib2.pyc in _call_chain(self, chain,
 kind, meth_name, *args)
    380             func = getattr(handler, meth_name)
    381
--> 382             result = func(*args)
    383             if result is not None:
    384                 return result

C:\Program Filesl\Continuum\Anaconda\lib\urllib2.pyc in http_open(self, req)
   1212
   1213     def http_open(self, req):
-> 1214         return self.do_open(httplib.HTTPConnection, req)
   1215
   1216     http_request = AbstractHTTPHandler.do_request_

C:\Program Filesl\Continuum\Anaconda\lib\urllib2.pyc in do_open(self, http_class
, req)
   1179
   1180         try:
-> 1181             h.request(req.get_method(), req.get_selector(), req.data, he
aders)
   1182         except socket.error, err: # XXX what error?
   1183             h.close()

C:\Program Filesl\Continuum\Anaconda\lib\httplib.pyc in request(self, method, ur
l, body, headers)
    971     def request(self, method, url, body=None, headers={}):
    972         """Send a complete request to the server."""
--> 973         self._send_request(method, url, body, headers)
    974
    975     def _set_content_length(self, body):

C:\Program Filesl\Continuum\Anaconda\lib\httplib.pyc in _send_request(self, meth
od, url, body, headers)
   1005         for hdr, value in headers.iteritems():
   1006             self.putheader(hdr, value)
-> 1007         self.endheaders(body)
   1008
   1009     def getresponse(self, buffering=False):

C:\Program Filesl\Continuum\Anaconda\lib\httplib.pyc in endheaders(self, message
_body)
    967         else:
    968             raise CannotSendHeader()
--> 969         self._send_output(message_body)
    970
    971     def request(self, method, url, body=None, headers={}):

C:\Program Filesl\Continuum\Anaconda\lib\httplib.pyc in _send_output(self, messa
ge_body)
    827             msg += message_body
    828             message_body = None
--> 829         self.send(msg)
    830         if message_body is not None:
    831             #message_body was not a string (i.e. it is a file) and

C:\Program Filesl\Continuum\Anaconda\lib\httplib.pyc in send(self, data)
    789         if self.sock is None:
    790             if self.auto_open:
--> 791                 self.connect()
    792             else:
    793                 raise NotConnected()

C:\Program Filesl\Continuum\Anaconda\lib\httplib.pyc in connect(self)
    770         """Connect to the host and port specified in __init__."""
    771         self.sock = socket.create_connection((self.host,self.port),
--> 772                                              self.timeout, self.source_a
ddress)
    773
    774         if self._tunnel_host:

C:\Program Filesl\Continuum\Anaconda\lib\socket.pyc in create_connection(address
, timeout, source_address)
    560             if source_address:
    561                 sock.bind(source_address)
--> 562             sock.connect(sa)
    563             return sock
    564

KeyboardInterrupt:

In [3]: run get_data.py
00:00:41Pot Value:439Temperature:34
1
00:00:42Pot Value:439Temperature:34
2
00:00:43Pot Value:439Temperature:34
3
00:00:44Pot Value:439Temperature:34
4
00:00:45Pot Value:439Temperature:34
5
00:00:46Pot Value:439Temperature:34
6
00:00:47Pot Value:439Temperature:34
7
00:00:48Pot Value:439Temperature:34
8
00:00:49Pot Value:439Temperature:35
9
00:00:50Pot Value:439Temperature:34
10
00:00:51Pot Value:439Temperature:34
11
00:00:52Pot Value:439Temperature:34
12
00:00:53Pot Value:439Temperature:34
13
00:00:54Pot Value:439Temperature:34
14
00:00:55Pot Value:439Temperature:34
15
00:00:56Pot Value:439Temperature:34
16
00:00:57Pot Value:439Temperature:34
17
00:00:58Pot Value:439Temperature:34
18
00:00:59Pot Value:439Temperature:34
19
00:00:00Pot Value:439Temperature:34
20
00:00:01Pot Value:439Temperature:34
21
00:00:02Pot Value:439Temperature:34
22
00:00:03Pot Value:439Temperature:34
23
00:00:04Pot Value:439Temperature:34
24
00:00:05Pot Value:439Temperature:34
25
00:00:06Pot Value:439Temperature:34
26
00:00:07Pot Value:439Temperature:34
27
00:00:08Pot Value:439Temperature:34
28
00:00:09Pot Value:439Temperature:34
29
---------------------------------------------------------------------------
URLError                                  Traceback (most recent call last)
C:\Program Filesl\Continuum\Anaconda\lib\site-packages\IPython\utils\py3compat.p
yc in execfile(fname, glob, loc)
    195             else:
    196                 filename = fname
--> 197             exec compile(scripttext, filename, 'exec') in glob, loc
    198     else:
    199         def execfile(fname, *where):

C:\Users\kflores\Documents\GitHub\GetARoom\get_data.py in <module>()
     13     elapsed=0
     14     while True:
---> 15         print(update())
     16         time.sleep(1)
     17         elapsed+=1

C:\Users\kflores\Documents\GitHub\GetARoom\get_data.py in update()
      4
      5 def update():
----> 6     f=urllib2.urlopen("http://10.26.66.19")
      7     soup=BeautifulSoup(f)
      8     title=soup.title.string

C:\Program Filesl\Continuum\Anaconda\lib\urllib2.pyc in urlopen(url, data, timeo
ut)
    125     if _opener is None:
    126         _opener = build_opener()
--> 127     return _opener.open(url, data, timeout)
    128
    129 def install_opener(opener):

C:\Program Filesl\Continuum\Anaconda\lib\urllib2.pyc in open(self, fullurl, data
, timeout)
    402             req = meth(req)
    403
--> 404         response = self._open(req, data)
    405
    406         # post-process response

C:\Program Filesl\Continuum\Anaconda\lib\urllib2.pyc in _open(self, req, data)
    420         protocol = req.get_type()
    421         result = self._call_chain(self.handle_open, protocol, protocol +

--> 422                                   '_open', req)
    423         if result:
    424             return result

C:\Program Filesl\Continuum\Anaconda\lib\urllib2.pyc in _call_chain(self, chain,
 kind, meth_name, *args)
    380             func = getattr(handler, meth_name)
    381
--> 382             result = func(*args)
    383             if result is not None:
    384                 return result

C:\Program Filesl\Continuum\Anaconda\lib\urllib2.pyc in http_open(self, req)
   1212
   1213     def http_open(self, req):
-> 1214         return self.do_open(httplib.HTTPConnection, req)
   1215
   1216     http_request = AbstractHTTPHandler.do_request_

C:\Program Filesl\Continuum\Anaconda\lib\urllib2.pyc in do_open(self, http_class
, req)
   1182         except socket.error, err: # XXX what error?
   1183             h.close()
-> 1184             raise URLError(err)
   1185         else:
   1186             try:

URLError: <urlopen error [Errno 10060] A connection attempt failed because the c
onnected party did not properly respond after a period of time, or established c
onnection failed because connected host has failed to respond>

In [4]: